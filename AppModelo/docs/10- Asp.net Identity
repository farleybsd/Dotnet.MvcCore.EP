Instalando Asp.Net Identity

Install-Package Microsoft.AspNetCore.Identity.UI Versao 2.2.0

Adicionar uma Area para Asp.Net Identity

Projeto Web -> Adicionar -> Adicionar Um Novo Item Scarfolding ->Identity

Selecionar as Views
Account\Login
Account\Register
Selecionar o Contexto


Alterar a classe Startup.cs
public void ConfigureServices(IServiceCollection services)

remover IdentityHostingStartup

 services.AddDbContext<AsptNetCoreIdentityContext>(options =>
                    options.UseSqlServer(Configuration.GetConnectionString("AsptNetCoreIdentityContextConnection")));

            services.AddDefaultIdentity<IdentityUser>()
                .AddDefaultUI(UIFramework.Bootstrap4)
                .AddEntityFrameworkStores<AsptNetCoreIdentityContext>();



 public void Configure(IApplicationBuilder app, IHostingEnvironment env)
 app.UseAuthentication();

 Gerando Migration
 add-migration Identity

Gravando migration
update-database

Registrar _LoginPartial
 Abrir a view _layout.cshtml

  <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                    <partial name="_LoginPartial" />
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                    </ul>
 </div>


 Authenticacao no controller com Asp.net Identity

[Authorize]
public IActionResult Privacy()
{
 return View();
}



 Atorizacao no controller com AspNetCore Identity

Startup.cs
add  .AddRoles<IdentityRole>()
 Adicionar o link na _layout
 <li class="nav-item">
    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Secret">Segredo</a>
</li>

[Authorize(Roles ="Admin")] // Autorizazao
public IActionResult Secret()
{
    return View();
}

Criando uma role para usuario

fazer um insert na tabela AspNetRules
Coluna Name Nome da role
iD= Manual
name = Admin
NormalizedName = nome da role em maiusculo
NormalizedName= ADMIN

Vinculando um usuario a uma role

Pegar o id do usuario na tabela AspNetUsers 4a92492f-7072-4f65-b592-8f4d7d59b8e1

Fazer Vinculo na tabela AspNetUserRoles
Colocar o Id do usuario que fica AspNetUsers na coluna UserId
Colocar o Id da Role que fica na tabela AspNetRules na Coluna RoleId